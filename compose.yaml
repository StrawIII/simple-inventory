services:
  backend:
    build: backend
    restart: always
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
    environment:
      - JWT_KEY=secret
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:8000/api/v1/health"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - postgres
      - minio
  frontend:
    build: frontend
    restart: always
    depends_on:
      - backend
  postgres:
    image: postgres:16
    restart: always
    ports:
      - 5432:5432
    # volumes:
    #   - type: bind
    #     source: /pgdata
    #     target: /var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=simple_inventory
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 30s
      timeout: 10s
      retries: 5
  minio:
    image: minio/minio:RELEASE.2024-07-04T14-25-45Z-cpuv1
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    # volumes:
    #   - type: bind
    #     source: /data
    #     target: ~/minio/data
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniopassword
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-I",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    command: server /data --console-address ":9001"
  nginx:
    image: nginx:1.27
    restart: always
    ports:
      - 80:80
    volumes:
      - type: bind
        source: nginx.conf
        target: /etc/nginx/conf.d/default.conf
    healthcheck:
      test: [ "CMD", "service", "nginx", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_healthy
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
